cls
awk
.\bin\starship.exe init nu | save .\config\starship\init.nu
$0
.\test.nu
nu .\test.nu
$nu
$env
.\bin\starship.exe init nu | nu
$nu
path
. | path dirname
E:\workspace\configedShell | path dirname
'E:\workspace\configedShell' | path dirname
'E:\workspace\configedShell\alacritty.exe' | path dirname
starship
^
^'echo hello'
^'starship'
key_bindings:
  - { key: Paste , action: Paste}
^'\\?\E:\workspace\configedShell\bin\starship.exe'
$'($nu.config-path | path dirname | path dirname )\starship\init.nu'
cat $'($nu.config-path | path dirname | path dirname )\starship\init.nu'
"""<\n>"
d
fkl;
ls
he
$env.CMD_DURATION_MS
jk
kj
hr
nvim
lesz
less
alacritty.exe
term size
term size -c
term size --help
k
g
h
f
k
register --encoding=capnp .\tools\nu_plugin_inc.exe
register --help
register  .\tools\nu_plugin_inc.exe
register  .\tools\nu_plugin_gstat.exe
register  .\tools\nu_plugin_query.exe
register  .\tools\nu_plugin_example.exe
register  .\tools\nu_plugin_custom_values.exe
help
help ^
^
register  ".\tools\nu_plugin_custom_values.exe"
register  "\tools\nu_plugin_custom_values.exe"
register  '.\tools\nu_plugin_custom_values.exe'
$'($nu.config-path  | path dirname | path dirname | path dirname)\tools\nu_plugin_custom_values.exe'
^$'($nu.config-path  | path dirname | path dirname | path dirname)\tools\nu_plugin_custom_values.exe'
register $'($nu.config-path  | path dirname | path dirname | path dirname)\tools\nu_plugin_custom_values.exe'
let a = $'($nu.config-path  | path dirname | path dirname | path dirname)\tools\nu_plugin_custom_values.exe'
a
$a
register $a
^'register' 
d
register nu_plugin_custom_values.exe
register nu_plugin_example.exe
shells
help
help commands
register --help
http://github.com
curl
curl --help
help commands
cd ..
D:
CD BIN\
cd BIN\
ls
genact
aria2c.exe
aria2c -h
ffmpeg
lsd
lsd --help
lsd
cd ..
zoxide init nushell | save zoxide.txt
z
z ..
cd ..
tar
sh
regex
awk
echo launch | awk '$0{print eee}'
echo launch | awk '{print eee}'
echo launch | awk '{print eee}'|<\n>save 1.txt
bat 1.txt
rm 1.txt
ls
lsd
rm zoxide.txt
bat cahce
bat -h
nvim test.sh
test.sh
nu test.sh
sh test.sh
cd e:\Download\2021012400_王一迪\src\
cls
alias
alias -h
alias sh = 'D:\SDK\Git\bin\sh.exe'
cls
alias sh = D:\SDK\Git\bin\sh.exe
cls
sh build.sh
alias
z
z .
z app
z appdata
hping
gping
gping www.baidu.com
gping info.tsinghua.edu.cn
gping github.com
gping dev.to
duf
duf c
duf c:
duf --help
ls
ls --help
export extern "hello"
export extern "hello" []
hello hefdds
ls --help 
ls bin\*.exe | each { |it| echo $it }
ls bin\*.exe | each { |it| (^$it --help) }
ls bin\*.exe | each { |it| (^$it.name --help) }
path
ls bin\*.exe | each { |it| (^$it.name --help | save $'helps\($it | path basename ).txt') } 
ls bin\*.exe | each { |it| (^$it.name --help | save $'helps\($it.name | path basename ).txt') } 
ls bin\*.exe | each { |it| (^$it.name --help | save $'helps\($it.name ).txt') } 
ls bin\*.exe | each { |it| (^$it.name --help | save $'helps\($it.name | path basename ).txt') } 
duf --help
duf --help | save helps\duf.exe.txt
do -i {duf --help} | save helps\duf.exe.txt
ls bin\*.exe | each { |it| (do -i { ^$it.name --help } | save $'helps\($it.name | path basename ).txt') } 
export --help
extern --help
rustfmt
rustfmt -h
$nu
$env
$nu
$nu.scope
$nu.os-info
$env
$env.config
$env.config.hooks\
$env.config.hooks
$env.config.hooks.env_change
$env.config.hooks.env_change.PWD
$env.config.hooks.env_change.PWD.0
awk
pgawk
gawk
"hello world" | awk '{print $1}'
"hello world" | gawk '{print $1}'
cd helps
ls
ag.exe.txt
help
help commands
open ag.exe.txt
cd ..
cd config\nushell\
open config.nu
bat config.nu
reedline r.txt
Reedline r.txt
help commands
cd ..
z nushell-0.70.0\
cargo clean
cd ..\alacritty-0.11.0\
cargo clean
cd ..\starship-1.11.0\
cargo clean
help bin
help bin procs
procs
procs -t
help bin
help bin | split 
help bin | split row
help bin | split row "\t"
help bin | split row "\t" | collect
help bin | split row "\t" | collect {|x| $x }
help commands
help bin | split row "\t" | collect {|x| let t = {name:$x};$t }
help bin | split row "\t" | each {|x| echo $"\t($x)" }
help bin | split row "\t" | each {|x| echo $"\t($x)"; }
help bin | split row "\t" | each {|x|  $"\t($x)" } 
help bin | split row "\t" | each {|x|  $"\t($x)" } | echo
cd ..
cd utils\
rustc help_bin.rs
cp help_bin.exe ..\ShellKit\utils\help_bin.exe
help bin
hx help_bin.rs
rustc -O help_bin.rs
cp help_bin.exe ..\ShellKit\utils\help_bin.exe
help bin
rustfmt
d:\SDK\Rust\rustfmt\rustfmt.exe help_bin.rs
bat help_bin.rs
help export
help extern
help bin list
$env.NU_LIB_DIRS
help
tips
tips.nu
nu tips.nu
$nu
$env
$config
$env.config
help bin
help
help bin list
help bin duff
help bin duf
tips
cd ..
cd utils\
rustc -O help_bin.rs
help bin us
rustc -O help_bin.rs
cls
tips
help bin
help bin list
d
cd ..
cd alacritty-0.11.0\
cd ..
z ..
help bin zoxide
cd `work areas\`
cd vscode\
cd java\
cd ..\go\
cd ..\cpp\
cd ..\..\git\
cd ColorLook\
cd ..
ls
cat
cd ..\vscode\cpp\
open m.cpp
bat m.cpp
duf
cd D:\Net_tools\X-Chromium\User\Chrome
d:
dust .
help bin
btm
benchmark 
benchmark { dust C:\ } 
hyperfine
hyperfine "dust D:"
hyperfine "dust ."
z C:\Users\User\.cache
dust
help bin sqlite3
ag
help bin
bat
bat --help
help bin
help bin rg
